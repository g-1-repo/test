# @go-corp/test-suite Configuration Example
#
# This file shows all available configuration options for the test runner.
# Copy this to .gotestsuiterc, .gotestsuiterc.json, or add to package.json under "gotestsuite" key.

{
  # Runtime Configuration
  "runtime": "node",
  "database": "sqlite",

  # Test Selection
  "categories": ["unit", "integration"],
  "patterns": ["**/*.{test,spec}.{js,ts,jsx,tsx}"],
  "exclude": ["**/node_modules/**", "**/dist/**"],

  # Execution Options  
  "watch": false,
  "verbose": false,
  "parallel": true,
  "maxWorkers": 4,
  "timeout": 30000,

  # Output Configuration
  "reporter": "default",
  "outputFile": "./test-results.json",
  "coverage": false,

  # Environment Variables
  "env": {
    "NODE_ENV": "test",
    "DEBUG": "false"
  },
  "envFile": ".env.test",

  # Test Discovery
  "testDir": "./tests",
  "testMatch": [
    "**/*.test.{js,ts,jsx,tsx}",
    "**/*.spec.{js,ts,jsx,tsx}"
  ],
  "testIgnore": [
    "**/node_modules/**",
    "**/dist/**",
    "**/.git/**"
  ],

  # Advanced Options
  "bail": false,
  "silent": false,
  "detectOpenHandles": true,
  "forceExit": false,

  # Enterprise Features
  "telemetry": {
    "enabled": false,
    "endpoint": "https://api.example.com/telemetry",
    "apiKey": "your-api-key-here"
  },

  "notifications": {
    "enabled": false,
    "slack": {
      "webhook": "https://hooks.slack.com/services/...",
      "channel": "#test-results"
    },
    "email": {
      "smtp": "smtp.example.com",
      "from": "tests@example.com",
      "to": ["dev-team@example.com"]
    }
  }
}